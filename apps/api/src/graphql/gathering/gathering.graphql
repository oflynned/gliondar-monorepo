extend type Query {
  getGatherings(page: Int): [Gathering!]
  getGatheringById(id: ID!): Gathering
}

extend type Mutation {
  createGathering(title: String!, description: String!): Gathering
  deleteGathering(id: ID!): Gathering
}

type Gathering {
  id: ID!
  createdAt: DateTime!
  lastUpdatedAt: DateTime
  title: String!
  address: String!
  bookmarked: Boolean!
  coordinates: CoordinateSet
  description: [String!]
  startsAt: DateTime
  timezone: String
  createdBy: User
  attendees: [Attendee!]
  image: Image
}

union Address = IrishAddress | AmbiguousAddress

type IrishAddress {
  eircode: String!
  address: [String!]!
}

type AmbiguousAddress {
  address: [String!]!
  country: String!
}
